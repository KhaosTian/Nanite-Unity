#pragma kernel CullingMeshlet

#include "MeshletCommon.hlsl"

// 线程组内共享内存

RWStructuredBuffer<uint> _VisibleMeshletIndices;
RWStructuredBuffer<uint> _DispatchArgs;

bool IsVisible()
{
    // 暂时不进行测试
    return true;
}

[numthreads(AS_GROUP_SIZE, 1, 1)]
void CullingMeshlet(
    uint3 id : SV_DispatchThreadID)
{
    // 每个线程处理一个meshlet，全局线程id就是meshlet的索引
    uint meshletIndex = id.x;

    // 全局线程数不能超过实际meshlet数量
    if (meshletIndex >= _MeshInfo.MeshletCount) return;

    // 进行可见性测试
    bool visible = IsVisible();
    
    if (visible)
    {
        uint visibleIndex = 0;
        // 原子操作获取可见meshlet数量并加1，记录该meshlet的索引
        InterlockedAdd(_DispatchArgs[1], 1, visibleIndex);
        _VisibleMeshletIndices[visibleIndex] = meshletIndex;
    }
}
